definitions:
  models.Errors:
    properties:
      message:
        type: string
    type: object
  models.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      email:
        type: string
      full_name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.RegisterResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  models.ResetPassword:
    properties:
      email:
        type: string
    type: object
  models.Success:
    properties:
      message:
        type: string
    type: object
  models.Token:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  models.UpdatePassword:
    properties:
      id:
        type: string
      new_password:
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: This is a sample server for Auth Service.
  title: Auth Service API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login a user with email and password
      parameters:
      - description: User Login
        in: body
        name: Login
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      summary: Login a user
      tags:
      - Auth
  /api/v1/auth/logout:
    post:
      consumes:
      - application/json
      description: Logout the authenticated user
      parameters:
      - description: Logout User
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Success'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Logout user
      tags:
      - Auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Refresh the access token using the refresh token
      parameters:
      - description: Refresh token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Token'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Refresh access token
      tags:
      - Auth
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User Registration
        in: body
        name: Register
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
      summary: Register a new user
      tags:
      - Auth
  /api/v1/auth/reset-password:
    post:
      consumes:
      - application/json
      description: Userni parolini qayta tiklash
      parameters:
      - description: Reset password
        in: body
        name: ResetPassword
        required: true
        schema:
          $ref: '#/definitions/models.ResetPassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Reset Password
      tags:
      - Auth
  /api/v1/auth/reset-password/new-password:
    post:
      consumes:
      - application/json
      description: Parolni emailga yuborilgan linkda yangilash
      parameters:
      - description: Reset Password
        in: body
        name: UpdatePassword
        required: true
        schema:
          $ref: '#/definitions/models.UpdatePassword'
      - description: Refresh token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Errors'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.Errors'
      security:
      - ApiKeyAuth: []
      summary: Update Parol
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
